{"v":"5.1.9","fr":25,"ip":0,"op":120,"w":1920,"h":1080,"nm":"Headless Ninja Logo Animation","ddd":0,"assets":[{"id":"image_0","w":1000,"h":1000,"u":"images/","p":"image_0.png"},{"id":"comp_0","layers":[{"ddd":0,"ind":1,"ty":0,"nm":"Gradient Layers Transform","td":1,"refId":"comp_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[960,540,0],"ix":2},"a":{"a":0,"k":[960,540,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":1920,"h":1080,"ip":0,"op":750,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":2,"nm":"Gradient.png","cl":"png","tt":1,"refId":"image_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[960,540,0],"ix":2},"a":{"a":0,"k":[500,500,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ip":0,"op":750,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Headless 2","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":50,"s":[0],"e":[100]},{"t":70}],"ix":11,"x":"var $bm_rt;\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    function easeandwizz_outQuart(t, b, c, d) {\n        return sum(mul($bm_neg(c), sub(mul(mul(mul(t = t / d - 1, t), t), t), 1)), b);\n    }\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outQuart(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outQuart(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outQuart(t, sY, eY, d);\n            val3 = easeandwizz_outQuart(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":50,"s":[758.291,523.095,0],"e":[758.291,483.095,0],"to":[0,-6.66666650772095,0],"ti":[0,6.66666650772095,0]},{"t":70}],"ix":2,"x":"var $bm_rt;\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    function easeandwizz_outQuart(t, b, c, d) {\n        return sum(mul($bm_neg(c), sub(mul(mul(mul(t = t / d - 1, t), t), t), 1)), b);\n    }\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outQuart(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outQuart(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outQuart(t, sY, eY, d);\n            val3 = easeandwizz_outQuart(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[304.166,563.345,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-2.1,12.79],[-5.77,-3.66],[5.3,4.289],[1.79,-15.121],[-1.021,-11.541],[6.39,4.36],[2.029,-2.02],[-2.571,-2.11],[-0.541,19.81]],"o":[[1.641,-8.109],[4.68,3.43],[-10.76,-8.261],[-2.411,22.149],[-1.171,11.069],[-2.65,-2.179],[-1.401,2.111],[10.759,8.881],[0.549,-20.74]],"v":[[-9.755,-13.921],[10.755,-16.651],[15.745,-24.289],[-19.654,-14.699],[11.386,12.051],[-12.635,15.479],[-19.574,16.02],[-18.484,23.669],[21.516,12.28]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[685.611,563.18],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-2.1,12.79],[-5.771,-3.66],[5.301,4.289],[1.799,-15.121],[-1.011,-11.541],[6.391,4.36],[2.029,-2.02],[-2.571,-2.11],[-0.541,19.81]],"o":[[1.641,-8.109],[4.679,3.43],[-10.76,-8.261],[-2.411,22.149],[-1.16,11.069],[-2.649,-2.179],[-1.401,2.111],[10.759,8.881],[0.549,-20.74]],"v":[[-9.755,-13.921],[10.756,-16.651],[15.745,-24.289],[-19.654,-14.699],[11.376,12.051],[-12.635,15.479],[-19.574,16.02],[-18.484,23.669],[21.516,12.28]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[636.411,563.18],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[7.101,0],[0,0],[0,0],[0,0],[6.941,0],[0,0],[0,0],[0,0],[7.181,0],[0,0],[0,-2.81],[0,0],[-2.731,0],[0,0]],"o":[[0,0],[0,0],[0,0],[6.941,0],[0,0],[0,0],[0,0],[7.02,0],[0,0],[-2.731,0],[0,0],[0,2.73],[0,0],[7.641,0]],"v":[[13.254,16.764],[-10.525,16.764],[-10.525,5.065],[9.124,5.065],[9.124,-5.145],[-10.525,-5.145],[-10.525,-16.845],[11.924,-16.845],[11.924,-26.975],[-16.065,-26.975],[-20.895,-22.145],[-20.895,22.145],[-16.065,26.975],[13.254,26.975]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[590.562,563.765],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","np":2,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[7.65,0],[0,0],[0,0],[2.5,0],[0,-2.579],[0,0],[-2.72,0],[0,0]],"o":[[0,0],[0,0],[0,-2.579],[-2.72,0],[0,0],[0,2.8],[0,0],[7.8,0]],"v":[[11.46,16.804],[-9.74,16.804],[-9.74,-22.256],[-14.35,-27.015],[-19.26,-22.256],[-19.26,22.265],[-14.35,27.015],[11.46,27.015]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[544.477,563.725],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","np":2,"cix":2,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[21.05,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[21.99,0]],"v":[[-6.2,17.465],[-19.14,17.465],[-19.14,-17.466],[-6.2,-17.466]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[35.63,0],[0,0],[0,-2.81],[0,0],[-2.58,0],[0,0]],"o":[[0,0],[-2.58,0],[0,0],[0,3.429],[0,0],[34.15,0]],"v":[[-6.2,-26.975],[-24.05,-26.975],[-29.43,-22.145],[-29.43,22.145],[-24.05,26.975],[-5.5,26.975]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[495.786,563.766],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 10","np":4,"cix":2,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.2,6.08],[0,0],[2.11,-4.14],[0,0],[-2.49,-1.4],[-1.25,2.65],[0,0],[0,0]],"o":[[0,0],[-1.95,-4.289],[0,0],[-1.56,3.27],[2.81,0.55],[0,0],[0,0],[2.8,6.08]],"v":[[26.195,18.559],[4.205,-25.181],[-5.465,-25.181],[-27.835,18.559],[-25.345,26.039],[-18.405,23.389],[-0.625,-13.021],[17.155,23.389]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[433.062,564.7],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 11","np":2,"cix":2,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[7.1,0],[0,0],[0,0],[0,0],[6.94,0],[0,0],[0,0],[0,0],[7.17,0],[0,0],[0,-2.81],[0,0],[-2.73,0],[0,0]],"o":[[0,0],[0,0],[0,0],[6.94,0],[0,0],[0,0],[0,0],[7.02,0],[0,0],[-2.73,0],[0,0],[0,2.73],[0,0],[7.65,0]],"v":[[13.25,16.764],[-10.53,16.764],[-10.53,5.065],[9.12,5.065],[9.12,-5.145],[-10.53,-5.145],[-10.53,-16.845],[11.93,-16.845],[11.93,-26.975],[-16.06,-26.975],[-20.9,-22.145],[-20.9,22.145],[-16.06,26.975],[13.25,26.975]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[381.677,563.765],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 12","np":2,"cix":2,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.73,0],[0,-2.809],[0,0],[0,0],[0,0],[2.73,0],[0,-2.809],[0,0],[-3.51,0],[0,2.731],[0,0],[0,0],[0,0],[-2.81,0],[0,2.731],[0,0]],"o":[[-2.81,0],[0,0],[0,0],[0,0],[0,-2.809],[-3.51,0],[0,0],[0,2.731],[2.73,0],[0,0],[0,0],[0,0],[0,2.731],[2.73,0],[0,0],[0,-2.809]],"v":[[18.095,-26.975],[12.795,-22.145],[12.795,-5.145],[-12.625,-5.145],[-12.625,-22.145],[-17.385,-26.975],[-22.925,-22.145],[-22.925,22.145],[-17.385,26.975],[-12.625,22.145],[-12.625,5.065],[12.795,5.065],[12.795,22.145],[18.095,26.975],[22.925,22.145],[22.925,-22.145]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[327.091,563.765],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 13","np":2,"cix":2,"ix":8,"mn":"ADBE Vector Group","hd":false}],"ip":50,"op":750,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Ninja 2","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":70,"s":[0],"e":[100]},{"t":110}],"ix":11,"x":"var $bm_rt;\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    function easeandwizz_outQuart(t, b, c, d) {\n        return sum(mul($bm_neg(c), sub(mul(mul(mul(t = t / d - 1, t), t), t), 1)), b);\n    }\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outQuart(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outQuart(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outQuart(t, sY, eY, d);\n            val3 = easeandwizz_outQuart(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":70,"s":[1293.062,483.75,0],"e":[1253.062,483.75,0],"to":[-6.66666650772095,0,0],"ti":[6.66666650772095,0,0]},{"t":90}],"ix":2,"x":"var $bm_rt;\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    function easeandwizz_outQuart(t, b, c, d) {\n        return sum(mul($bm_neg(c), sub(mul(mul(mul(t = t / d - 1, t), t), t), 1)), b);\n    }\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outQuart(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outQuart(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outQuart(t, sY, eY, d);\n            val3 = easeandwizz_outQuart(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[738.937,564,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.2,6.08],[0,0],[2.11,-4.14],[0,0],[-2.5,-1.4],[-1.25,2.65],[0,0],[0,0]],"o":[[0,0],[-1.95,-4.289],[0,0],[-1.56,3.27],[2.811,0.55],[0,0],[0,0],[2.811,6.08]],"v":[[26.2,18.559],[4.211,-25.181],[-5.46,-25.181],[-27.84,18.559],[-25.34,26.039],[-18.4,23.389],[-0.619,-13.021],[17.15,23.389]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[946.576,564.7],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-6.55],[0,0],[4.371,-0.16],[3.269,4.061],[-3.97,-4.75],[-6.63,0],[0,12.25],[0,0]],"o":[[0,0],[-0.08,7.721],[-3.429,0.16],[-4.061,-4.99],[4.84,6.24],[13.49,0],[0,0],[0,-6.55]],"v":[[9.865,-21.945],[9.865,8.845],[1.595,18.675],[-8.614,13.835],[-16.185,20.465],[0.815,28.495],[20.155,8.845],[20.155,-21.945]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[890.791,563.415],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.81,0],[0,-2.579],[0,0],[0,0],[2.8,0],[0,-2.81],[0,0],[-2.81,0],[0,3.43],[0,0],[0,0],[-2.73,0],[0,3.43],[0,0]],"o":[[-2.65,0],[0,0],[0,0],[-2.1,-2.03],[-4.061,0],[0,0],[0,3.43],[2.81,0],[0,0],[0,0],[2.26,2.11],[2.02,-0.62],[0,0],[0,-2.579]],"v":[[17.695,-27.325],[12.785,-21.945],[12.785,8.305],[-13.025,-23.975],[-18.555,-26.705],[-23.235,-21.165],[-23.235,21.945],[-17.935,27.325],[-13.025,21.945],[-13.025,-8.145],[12.785,24.595],[19.105,27.325],[23.235,21.945],[23.235,-21.945]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[841.942,563.415],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-6.399],[0,0],[0,6.469],[0,0]],"o":[[0,0],[0,6.629],[0,0],[0,-6.63]],"v":[[-5.145,-22.26],[-5.145,22.261],[5.145,22.261],[5.145,-22.26]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[801.942,563.73],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.81,0],[0,-2.579],[0,0],[0,0],[2.811,0],[0,-2.81],[0,0],[-2.81,0],[0,3.43],[0,0],[0,0],[-2.729,0],[0,3.43],[0,0]],"o":[[-2.65,0],[0,0],[0,0],[-2.109,-2.03],[-4.05,0],[0,0],[0,3.43],[2.8,0],[0,0],[0,0],[2.26,2.11],[2.031,-0.62],[0,0],[0,-2.579]],"v":[[17.7,-27.325],[12.79,-21.945],[12.79,8.305],[-13.021,-23.975],[-18.561,-26.705],[-23.24,-21.165],[-23.24,21.945],[-17.93,27.325],[-13.021,21.945],[-13.021,-8.145],[12.79,24.595],[19.099,27.325],[23.24,21.945],[23.24,-21.945]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[762.177,563.415],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"ix":5,"mn":"ADBE Vector Group","hd":false}],"ip":70,"op":750,"st":0,"bm":0}]},{"id":"comp_1","layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Red /","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":50,"s":[0],"e":[100]},{"t":70}],"ix":11,"x":"var $bm_rt;\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    function easeandwizz_outQuart(t, b, c, d) {\n        return sum(mul($bm_neg(c), sub(mul(mul(mul(t = t / d - 1, t), t), t), 1)), b);\n    }\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outQuart(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outQuart(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outQuart(t, sY, eY, d);\n            val3 = easeandwizz_outQuart(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":50,"s":[1235.792,486.749,0],"e":[1205.792,486.749,0],"to":[-5,0,0],"ti":[5,0,0]},{"t":70}],"ix":2,"x":"var $bm_rt;\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    function easeandwizz_outQuart(t, b, c, d) {\n        return sum(mul($bm_neg(c), sub(mul(mul(mul(t = t / d - 1, t), t), t), 1)), b);\n    }\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outQuart(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outQuart(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outQuart(t, sY, eY, d);\n            val3 = easeandwizz_outQuart(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[141.667,204.999,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.56,0],[0.881,0.63],[-1.605,2.247],[0,0],[-2.248,-1.608],[1.605,-2.247],[0,0]],"o":[[-1.006,0],[-2.247,-1.604],[0,0],[1.605,-2.247],[2.247,1.604],[0,0],[-0.976,1.366]],"v":[[-20.005,33.338],[-22.906,32.406],[-24.068,25.432],[15.932,-30.568],[22.906,-31.73],[24.068,-24.756],[-15.932,31.244]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[141.667,204.662],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 15","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":50,"op":800,"st":50,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"}","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[661.268,486.75,0],"ix":2},"a":{"a":0,"k":[207.143,205,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"n":["0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167"],"t":42,"s":[0,0,100],"e":[100,100,100]},{"t":62}],"ix":6,"x":"var $bm_rt;\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    function easeandwizz_outElastic(t, b, c, d, a, p) {\n        var s;\n        var p = 0.81;\n        var a = 50;\n        if (t == 0)\n            return b;\n        if ((t /= d) == 1)\n            return sum(b, c);\n        if (!p)\n            p = mul(d, 0.3);\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = div(p, 4);\n        } else\n            s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n        return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n    }\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.848,0],[0.926,1.604],[-2.391,1.381],[0,0],[0,3.56],[0,0],[3.084,1.781],[0,0],[-1.381,2.391],[-2.392,-1.382],[0,0],[0,-7.121],[0,0],[6.168,-3.563],[0,0]],"o":[[-1.729,0],[-1.381,-2.392],[0,0],[3.084,-1.781],[0,0],[0,-3.561],[0,0],[-2.391,-1.381],[1.38,-2.391],[0,0],[6.169,3.562],[0,0],[0,7.121],[0,0],[-0.787,0.455]],"v":[[-19.949,63.806],[-24.285,61.305],[-22.454,54.475],[10.665,35.356],[15.665,26.695],[15.665,-25.985],[10.665,-34.644],[-22.454,-53.764],[-24.285,-60.594],[-17.454,-62.425],[15.665,-43.305],[25.665,-25.985],[25.665,26.695],[15.667,44.015],[-17.454,63.135]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[181.477,204.645],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 29","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":42,"op":792,"st":42,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"{","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[530.028,486.75,0],"ix":2},"a":{"a":0,"k":[75.903,205,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"n":["0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167"],"t":42,"s":[0,0,100],"e":[100,100,100]},{"t":62}],"ix":6,"x":"var $bm_rt;\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    function easeandwizz_outElastic(t, b, c, d, a, p) {\n        var s;\n        var p = 0.81;\n        var a = 50;\n        if (t == 0)\n            return b;\n        if ((t /= d) == 1)\n            return sum(b, c);\n        if (!p)\n            p = mul(d, 0.3);\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = div(p, 4);\n        } else\n            s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n        return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n    }\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.728,0],[0.787,0.455],[0,0],[0,7.121],[0,0],[-6.168,3.562],[0,0],[-1.38,-2.39],[2.391,-1.381],[0,0],[0,-3.561],[0,0],[-3.084,-1.781],[0,0],[1.381,-2.392]],"o":[[-0.848,0],[0,0],[-6.169,-3.563],[0,0],[0,-7.121],[0,0],[2.393,-1.381],[1.381,2.391],[0,0],[-3.084,1.781],[0,0],[0,3.56],[0,0],[2.391,1.381],[-0.926,1.604]],"v":[[19.95,63.806],[17.455,63.135],[-15.665,44.015],[-25.665,26.695],[-25.665,-25.985],[-15.667,-43.305],[17.455,-62.425],[24.285,-60.595],[22.455,-53.765],[-10.665,-34.645],[-15.665,-25.985],[-15.665,26.695],[-10.665,35.355],[22.455,54.475],[24.285,61.305]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[101.569,204.645],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 30","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":42,"op":792,"st":42,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"/","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[595.792,486.749,0],"ix":2},"a":{"a":0,"k":[141.667,204.999,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"n":["0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167"],"t":44,"s":[0,0,100],"e":[100,100,100]},{"t":64}],"ix":6,"x":"var $bm_rt;\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    function easeandwizz_outElastic(t, b, c, d, a, p) {\n        var s;\n        var p = 0.81;\n        var a = 50;\n        if (t == 0)\n            return b;\n        if ((t /= d) == 1)\n            return sum(b, c);\n        if (!p)\n            p = mul(d, 0.3);\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = div(p, 4);\n        } else\n            s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n        return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n    }\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.56,0],[0.881,0.63],[-1.605,2.247],[0,0],[-2.248,-1.608],[1.605,-2.247],[0,0]],"o":[[-1.006,0],[-2.247,-1.604],[0,0],[1.605,-2.247],[2.247,1.604],[0,0],[-0.976,1.366]],"v":[[-20.005,33.338],[-22.906,32.406],[-24.068,25.432],[15.932,-30.568],[22.906,-31.73],[24.068,-24.756],[-15.932,31.244]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[141.667,204.662],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 15","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":44,"op":794,"st":44,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"Hexagon","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[595.648,486.75,0],"ix":2},"a":{"a":0,"k":[141.523,205,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"n":["0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167"],"t":30,"s":[0,0,100],"e":[90,90,100]},{"t":50}],"ix":6,"x":"var $bm_rt;\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    function easeandwizz_outElastic(t, b, c, d, a, p) {\n        var s;\n        var p = 0.81;\n        var a = 50;\n        if (t == 0)\n            return b;\n        if ((t /= d) == 1)\n            return sum(b, c);\n        if (!p)\n            p = mul(d, 0.3);\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = div(p, 4);\n        } else\n            s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n        return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n    }\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.729,0],[1.542,-0.891],[0,0],[0,-3.562],[0,0],[-3.084,-1.78],[0,0],[-3.084,1.781],[0,0],[0,3.561],[0,0],[3.084,1.78],[0,0]],"o":[[-1.729,0],[0,0],[-3.084,1.78],[0,0],[0,3.561],[0,0],[3.084,1.781],[0,0],[3.084,-1.78],[0,0],[0,-3.562],[0,0],[-1.542,-0.891]],"v":[[0,-92.23],[-5,-90.894],[-76.603,-49.554],[-81.603,-40.894],[-81.603,41.786],[-76.603,50.446],[-5,91.786],[5,91.786],[76.603,50.446],[81.603,41.786],[81.603,-40.894],[76.603,-49.554],[5,-90.894]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[141.523,204.554],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 31","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":-3,"op":780,"st":30,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"Star to Hexagon","tt":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    function easeandwizz_outQuad(t, b, c, d) {\n        return sum(mul(mul($bm_neg(c), t /= d), sub(t, 2)), b);\n    }\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outQuad(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outQuad(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outQuad(t, sY, eY, d);\n            val3 = easeandwizz_outQuad(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"p":{"a":0,"k":[595.648,486.75,0],"ix":2},"a":{"a":0,"k":[141.523,205,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"n":["0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167"],"t":0,"s":[0,0,100],"e":[100,100,100]},{"t":20}],"ix":6,"x":"var $bm_rt;\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    function easeandwizz_outElastic(t, b, c, d, a, p) {\n        var s;\n        var p = 0.81;\n        var a = 50;\n        if (t == 0)\n            return b;\n        if ((t /= d) == 1)\n            return sum(b, c);\n        if (!p)\n            p = mul(d, 0.3);\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = div(p, 4);\n        } else\n            s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n        return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n    }\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":20,"s":[{"i":[[2.14,0],[0.69,2.025],[0,0],[-0.761,1.262],[-1.456,0.231],[-1.766,0.292],[4.806,2.8],[5.255,-1.693],[-0.786,-2.157],[0.717,-1.271],[1.433,-0.284],[0,0],[1.07,1.854],[-1.408,1.611],[0,0],[-1.463,-0.067],[-0.929,-1.147],[-1.135,-1.384],[-0.023,5.556],[4.096,3.708],[1.479,-1.758],[1.459,-0.015],[0,0],[0.95,1.087],[0,0],[-1.069,1.852],[-2.102,-0.408],[0,0],[-0.714,-1.291],[0.528,-1.377],[0.631,-1.674],[-4.822,2.759],[-1.16,5.4],[2.26,0.398],[0.743,1.258],[-0.471,1.382],[0,0],[-2.14,0],[-0.69,-2.026],[0,0],[0.761,-1.263],[1.456,-0.232],[1.767,-0.292],[-4.812,-2.799],[-5.255,1.695],[0.787,2.155],[-0.717,1.273],[-1.432,0.283],[0,0],[-1.07,-1.855],[1.408,-1.611],[0,0],[1.464,0.027],[0.93,1.143],[1.138,1.383],[0.019,-5.559],[-4.091,-3.705],[-1.482,1.759],[-1.459,0.014],[0,0],[-0.95,-1.086],[0,0],[1.07,-1.854],[2.103,0.413],[0,0],[0.714,1.29],[-0.527,1.377],[-0.629,1.674],[4.822,-2.762],[1.16,-5.397],[-2.261,-0.398],[-0.743,-1.259],[0.472,-1.382],[0,0]],"o":[[-2.139,0],[0,0],[-0.476,-1.395],[0.762,-1.264],[1.967,-0.312],[-1.151,-5.208],[-4.945,-2.881],[0.673,1.944],[0.5,1.372],[-0.717,1.272],[0,0],[-2.102,0.413],[-1.069,-1.852],[0,0],[0.971,-1.111],[1.475,0.029],[1.254,1.548],[3.938,-3.603],[0.024,-5.726],[-1.349,1.553],[-0.939,1.116],[0,0],[-1.441,0],[0,0],[-1.409,-1.61],[1.07,-1.853],[0,0],[1.447,0.287],[0.714,1.291],[-0.713,1.86],[5.096,1.611],[4.967,-2.842],[-2.02,-0.388],[-1.438,-0.253],[-0.742,-1.257],[0,0],[0.691,-2.026],[2.139,0],[0,0],[0.475,1.396],[-0.761,1.264],[-1.966,0.313],[1.152,5.212],[4.944,2.876],[-0.674,-1.942],[-0.501,-1.372],[0.716,-1.272],[0,0],[2.099,-0.416],[1.069,1.853],[0,0],[-0.969,1.109],[-1.474,-0.027],[-1.258,-1.546],[-3.94,3.61],[-0.02,5.72],[1.351,-1.555],[0.94,-1.116],[0,0],[1.441,0],[0,0],[1.408,1.61],[-1.069,1.852],[0,0],[-1.446,-0.286],[-0.714,-1.29],[0.711,-1.857],[-5.094,-1.607],[-4.962,2.842],[2.02,0.388],[1.438,0.253],[0.742,1.257],[0,0],[-0.691,2.025]],"v":[[0.526,121.092],[-4.206,117.705],[-19.552,72.702],[-19.103,68.509],[-15.605,66.15],[-9.783,65.208],[-19.018,52.678],[-34.945,50.889],[-32.631,57.396],[-32.974,61.561],[-36.361,64.011],[-83.005,73.224],[-88.304,70.818],[-87.738,65.027],[-56.439,29.236],[-52.58,27.528],[-48.789,29.381],[-45.063,33.955],[-38.828,19.706],[-45.246,5.008],[-49.732,10.262],[-53.51,12.043],[-53.558,12.043],[-57.321,10.334],[-88.62,-25.457],[-89.187,-31.248],[-83.888,-33.653],[-37.243,-24.441],[-33.836,-21.953],[-33.544,-17.745],[-35.64,-12.235],[-20.172,-13.961],[-10.661,-26.865],[-17.452,-28.112],[-20.889,-30.492],[-21.317,-34.65],[-5.972,-79.652],[-1.239,-83.039],[3.493,-79.652],[18.839,-34.65],[18.389,-30.456],[14.891,-28.098],[9.069,-27.155],[18.311,-14.618],[34.236,-12.839],[31.919,-19.34],[32.26,-23.507],[35.646,-25.958],[82.291,-35.18],[87.591,-32.775],[87.024,-26.983],[55.725,8.808],[51.873,10.516],[48.083,8.672],[44.345,4.103],[38.111,18.369],[44.525,33.053],[49.018,27.791],[52.797,26.01],[52.845,26.01],[56.608,27.718],[87.907,63.499],[88.473,69.291],[83.175,71.696],[36.53,62.484],[33.124,59.999],[32.829,55.792],[34.918,50.286],[19.451,52.018],[9.948,64.918],[16.739,66.165],[20.176,68.545],[20.603,72.702],[5.259,117.705]],"c":true}],"e":[{"i":[[0.432,0],[0.216,-0.014],[0.215,-0.028],[0.213,-0.042],[0.21,-0.056],[0.207,-0.07],[0.203,-0.084],[0.198,-0.097],[0.193,-0.111],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.348,-0.268],[0.307,-0.309],[0.263,-0.344],[0.216,-0.374],[0.166,-0.4],[0.114,-0.42],[0.058,-0.435],[0,-0.445],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.058,-0.435],[-0.114,-0.42],[-0.166,-0.4],[-0.216,-0.374],[-0.263,-0.344],[-0.307,-0.309],[-0.348,-0.268],[-0.385,-0.222],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.841,-0.223],[-0.864,0],[-0.841,0.223],[-0.771,0.445],[0,0],[0,0],[0,0],[0,0],[-0.613,0.617],[-0.432,0.749],[-0.228,0.84],[0,0.89],[0,0],[0,0],[0,0],[0,0],[0.228,0.84],[0.432,0.749],[0.613,0.617],[0.771,0.445],[0,0],[0,0],[0,0],[0,0],[0.406,0.167],[0.421,0.111],[0.429,0.056]],"o":[[-0.216,0],[-0.216,0.014],[-0.215,0.028],[-0.213,0.042],[-0.21,0.056],[-0.207,0.07],[-0.203,0.084],[-0.198,0.097],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.385,0.222],[-0.348,0.268],[-0.307,0.309],[-0.263,0.344],[-0.216,0.374],[-0.166,0.4],[-0.114,0.42],[-0.058,0.435],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0.445],[0.058,0.435],[0.114,0.42],[0.166,0.4],[0.216,0.374],[0.263,0.344],[0.307,0.309],[0.348,0.268],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.771,0.445],[0.841,0.223],[0.865,0],[0.841,-0.223],[0,0],[0,0],[0,0],[0,0],[0.771,-0.445],[0.613,-0.617],[0.432,-0.749],[0.228,-0.84],[0,0],[0,0],[0,0],[0,0],[0,-0.89],[-0.228,-0.84],[-0.432,-0.749],[-0.613,-0.617],[0,0],[0,0],[0,0],[0,0],[-0.386,-0.223],[-0.406,-0.167],[-0.421,-0.111],[-0.429,-0.056]],"v":[[0,-92.23],[-0.648,-92.209],[-1.294,-92.147],[-1.935,-92.042],[-2.57,-91.896],[-3.196,-91.708],[-3.811,-91.479],[-4.413,-91.207],[-5,-90.894],[-8.077,-89.118],[-11.873,-86.926],[-16.667,-84.158],[-22.901,-80.559],[-31.292,-75.714],[-43.039,-68.932],[-59.821,-59.243],[-76.603,-49.554],[-77.703,-48.817],[-78.685,-47.951],[-79.54,-46.971],[-80.26,-45.892],[-80.834,-44.73],[-81.255,-43.5],[-81.515,-42.216],[-81.603,-40.894],[-81.603,-37.341],[-81.603,-32.958],[-81.603,-27.422],[-81.603,-20.224],[-81.603,-10.535],[-81.603,3.03],[-81.603,22.408],[-81.603,41.786],[-81.515,43.107],[-81.255,44.391],[-80.834,45.622],[-80.259,46.784],[-79.54,47.863],[-78.685,48.843],[-77.703,49.709],[-76.603,50.446],[-71.299,53.508],[-64.404,57.489],[-55.122,62.848],[-42.127,70.35],[-23.564,81.068],[-5,91.786],[-2.57,92.788],[0,93.122],[2.57,92.788],[5,91.786],[16.188,85.327],[31.851,76.283],[54.227,63.365],[76.603,50.446],[78.685,48.843],[80.26,46.784],[81.255,44.391],[81.603,41.786],[81.603,28.867],[81.603,10.781],[81.603,-15.056],[81.603,-40.894],[81.255,-43.5],[80.26,-45.892],[78.685,-47.951],[76.603,-49.554],[65.415,-56.013],[49.752,-65.056],[27.376,-77.975],[5,-90.894],[3.811,-91.479],[2.57,-91.896],[1.294,-92.147]],"c":true}]},{"t":40}],"ix":2,"x":"var $bm_rt;\nfunction easeAndWizz() {\n    var t, d, sX, eX;\n    function easeandwizz_inOutExpo(t, b, c, d) {\n        var CORRECTION = 0.000976563;\n        var v;\n        if ((t /= d / 2) < 1) {\n            v = sub(Math.pow(2, mul(10, sub(t, 1))), CORRECTION);\n        } else {\n            v = sum(sum($bm_neg(Math.pow(2, mul(-10, sub(t, 1)))), 2), CORRECTION);\n        }\n        return sum(b, mul(div(v, 2), c));\n    }\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1.time;\n    eX = sub(key2.time, key1.time);\n    if (time < key1.time || time > key2.time) {\n        return null;\n    } else {\n        return valueAtTime(easeandwizz_inOutExpo(t, sX, eX, d));\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[141.523,204.554],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 31","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":750,"st":0,"bm":0}]}],"layers":[{"ddd":0,"ind":1,"ty":1,"nm":"Dark Gray Solid 1","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"n":["0p667_1_0p333_0"],"t":90,"s":[0],"e":[100]},{"t":110}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[960,540,0],"ix":2},"a":{"a":0,"k":[960,540,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"sw":1920,"sh":1080,"sc":"#202020","ip":0,"op":750,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Shape Layer 1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[960,503.5,0],"ix":2},"a":{"a":0,"k":[-6.109,39.891,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"n":["0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167"],"t":0,"s":[0,0,100],"e":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"n":["0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167"],"t":20,"s":[100,100,100],"e":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"n":["0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167","0p833_0p833_0p167_0p167"],"t":25,"s":[100,100,100],"e":[0,0,100]},{"t":35}],"ix":6,"x":"var $bm_rt;\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    function easeandwizz_outElastic(t, b, c, d, a, p) {\n        var s;\n        var p = 0.81;\n        var a = 50;\n        if (t == 0)\n            return b;\n        if ((t /= d) == 1)\n            return sum(b, c);\n        if (!p)\n            p = mul(d, 0.3);\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = div(p, 4);\n        } else\n            s = mul(div(p, mul(2, Math.PI)), Math.asin(div(c, a)));\n        return sum(sum(mul(mul(a, Math.pow(2, mul(-10, t))), Math.sin(div(mul(sub(mul(t, d), s), mul(2, Math.PI)), p))), c), b);\n    }\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_outElastic(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_outElastic(t, sY, eY, d);\n            val3 = easeandwizz_outElastic(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[31.781,31.781],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.125490196078,0.125490196078,0.125490196078,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-6.109,39.891],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":750,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":0,"nm":"Container 2","refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"n":"0p833_0p833_0p167_0p167","t":50,"s":[1326,540,0],"e":[916,540,0],"to":[-68.3333358764648,0,0],"ti":[68.3333358764648,0,0]},{"t":70}],"ix":2,"x":"var $bm_rt;\nfunction easeAndWizz() {\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\n    function easeandwizz_inOutExpo(t, b, c, d) {\n        var CORRECTION = 0.000976563;\n        var v;\n        if ((t /= d / 2) < 1) {\n            v = sub(Math.pow(2, mul(10, sub(t, 1))), CORRECTION);\n        } else {\n            v = sum(sum($bm_neg(Math.pow(2, mul(-10, sub(t, 1)))), 2), CORRECTION);\n        }\n        return sum(b, mul(div(v, 2), c));\n    }\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    var dim = 1;\n    try {\n        key(1)[1].length;\n        dim = 2;\n        key(1)[2].length;\n        dim = 3;\n    } catch (e) {\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1[0];\n    eX = sub(key2[0], key1[0]);\n    if (dim >= 2) {\n        sY = key1[1];\n        eY = sub(key2[1], key1[1]);\n        if (dim >= 3) {\n            sZ = key1[2];\n            eZ = sub(key2[2], key1[2]);\n        }\n    }\n    if (time < key1.time || time > key2.time) {\n        return value;\n    } else {\n        val1 = easeandwizz_inOutExpo(t, sX, eX, d);\n        switch (dim) {\n        case 1:\n            return val1;\n            break;\n        case 2:\n            val2 = easeandwizz_inOutExpo(t, sY, eY, d);\n            return [\n                val1,\n                val2\n            ];\n            break;\n        case 3:\n            val2 = easeandwizz_inOutExpo(t, sY, eY, d);\n            val3 = easeandwizz_inOutExpo(t, sZ, eZ, d);\n            return [\n                val1,\n                val2,\n                val3\n            ];\n            break;\n        default:\n            return null;\n        }\n    }\n}\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[960,540,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":1920,"h":1080,"ip":0,"op":750,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":1,"nm":"Dark Gray Solid 1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[960,540,0],"ix":2},"a":{"a":0,"k":[960,540,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"sw":1920,"sh":1080,"sc":"#202020","ip":0,"op":750,"st":0,"bm":0}],"markers":[]}